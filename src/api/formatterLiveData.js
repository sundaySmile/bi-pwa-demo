import {
  dateToString,
  formatterChargeable,
  formatterAverage
} from 'ployfill/';
// import moment from 'moment/src/moment.js';
import moment from 'moment/moment.js';

function formatterDataShow(list = []) {
  return list.map(item => {
    return formatterDayData(item);
  });
}

function formatterDayData(item = {}) {
  const {
    code,
    name,
    tags,
    videoType = '-',
    timeStart,
    timeEnd,
    beginTime = '-',
    endTime = '-',
    contentType,
    playUv,
    averageBarrageCount = '-',
    averageBarrageCountA = '-',
    averageBarrageCountI = '-',
    averageBarrageCountL = '-',
    averageDuration = 0,
    averageDurationA = 0,
    averageDurationI = 0,
    averageDurationL = 0,
    // averagePlayDuration = 0,
    averageGiftCount = '-',
    averageGiftCountA = '-',
    averageGiftCountI = '-',
    averageGiftCountL = '-',
    averagePlayCount = 0,
    averagePlayCountA = 0,
    averagePlayCountI = 0,
    averagePlayCountL = 0,
    averageViewCount = 0,
    averageViewCountA = 0,
    averageViewCountI = 0,
    averageViewCountL = 0,
    barrageCount = '-',
    barrageCountA = '-',
    barrageCountI = '-',
    barrageCountL = '-',
    barragePersonCount = '-',
    barragePersonCountA = '-',
    barragePersonCountI = '-',
    barragePersonCountL = '-',
    giftCount = '-',
    giftCountA = '-',
    giftCountL = '-',
    giftCountI = '-',
    giftPersonCount = '-',
    giftPersonCountA = '-',
    giftPersonCountI = '-',
    giftPersonCountL = '-',
    reserveCount,
    reserveCountA,
    reserveCountI,
    reserveCountL,
    isChargeable = '-',
    isChargeableA = '-',
    isChargeableI = '-',
    isChargeableL = '-',
    orderCount = '-',
    orderCountA = '-',
    orderCountI = '-',
    orderCountL = '-',
    payRate = '-',
    payRateA = '-',
    payRateI = '-',
    payRateL = '-',
    payUser = '-',
    payUserA = '-',
    payUserI = '-',
    payUserL = '-',
    playCount = 0,
    playCountA = 0,
    playCountI = 0,
    playCountL = 0,
    playDuration = 0,
    playDurationA = 0,
    playDurationI = 0,
    playDurationL = 0,
    redeemCount = '-',
    redeemCountA = '-',
    redeemCountI = '-',
    redeemCountL = '-',
    shareCount = '-',
    shareCountA = '-',
    shareCountI = '-',
    shareCountL = '-',
    sharePersonCount = '-',
    sharePersonCountA = '-',
    sharePersonCountI = '-',
    sharePersonCountL = '-',
    uv = 0,
    uvA = 0,
    uvI = 0,
    uvL = 0,
    viewCount = 0,
    viewCountA = 0,
    viewCountI = 0,
    viewCountL = 0
  } = item;

  const timeStartStr = dateToString(timeStart);
  const timeEndStr = dateToString(timeEnd);
  let dataPeriod = `${timeStartStr}~${timeEndStr}`;
  if (timeStartStr === timeEndStr) {
    dataPeriod = timeEndStr;
  }
  let livePlayStart = '';
  let livePlayEnd = '';
  if (beginTime) {
    livePlayStart = moment(beginTime).format('YYYY/MM/DD HH:mm');
  }
  if (endTime) {
    livePlayEnd = moment(endTime).format('YYYY/MM/DD HH:mm');
  }

  return {
    code,
    name,
    tags: tags || '-',
    playUv,
    timeStart,
    timeEnd,
    beginTime,
    endTime,
    videoType,
    dataPeriod,
    contentType: contentType || '-',
    livePeriod: `${livePlayStart} ~ ${livePlayEnd}`,
    averageBarrageCount: formatterAverage(averageBarrageCount),
    averageBarrageCountA: formatterAverage(averageBarrageCountA),
    averageBarrageCountI: formatterAverage(averageBarrageCountI),
    averageBarrageCountL: formatterAverage(averageBarrageCountL),
    averageGiftCount: formatterAverage(averageGiftCount),
    averageGiftCountA: formatterAverage(averageGiftCountA),
    averageGiftCountI: formatterAverage(averageGiftCountI),
    averageGiftCountL: formatterAverage(averageGiftCountL),
    averageDuration: formatterAverage(averageDuration),
    averageDurationA: formatterAverage(averageDurationA),
    averageDurationI: formatterAverage(averageDurationI),
    averageDurationL: formatterAverage(averageDurationL),
    averagePlayCount: formatterAverage(averagePlayCount),
    averagePlayCountA: formatterAverage(averagePlayCountA),
    averagePlayCountI: formatterAverage(averagePlayCountI),
    averagePlayCountL: formatterAverage(averagePlayCountL),
    averageViewCount: formatterAverage(averageViewCount),
    averageViewCountA: formatterAverage(averageViewCountA),
    averageViewCountI: formatterAverage(averageViewCountI),
    averageViewCountL: formatterAverage(averageViewCountL),
    barragePersonCount: barragePersonCount || '-',
    barragePersonCountA: barragePersonCountA || '-',
    barragePersonCountI: barragePersonCountI || '-',
    barragePersonCountL: barragePersonCountL || '-',
    giftPersonCount: giftPersonCount || '-',
    giftPersonCountA: giftPersonCountA || '-',
    giftPersonCountI: giftPersonCountI || '-',
    giftPersonCountL: giftPersonCountL || '-',
    barrageCount: barrageCount || '-',
    barrageCountA: barrageCountA || '-',
    barrageCountI: barrageCountI || '-',
    barrageCountL: barrageCountL || '-',
    giftCount: giftCount || '-',
    giftCountA: giftCountA || '-',
    giftCountI: giftCountI || '-',
    giftCountL: giftCountL || '-',
    reserveCount: reserveCount || '-',
    reserveCountA: reserveCountA || '-',
    reserveCountI: reserveCountI || '-',
    reserveCountL: reserveCountL || '-',
    isChargeable: formatterChargeable(isChargeable),
    isChargeableA: formatterChargeable(isChargeableA),
    isChargeableI: formatterChargeable(isChargeableI),
    isChargeableL: formatterChargeable(isChargeableL),
    orderCount: orderCount || '-',
    orderCountA: orderCountA || '-',
    orderCountI: orderCountI || '-',
    orderCountL: orderCountL || '-',
    uv,
    uvA,
    uvI,
    uvL,
    playCount,
    playCountA,
    playCountI,
    playCountL,
    viewCount,
    viewCountA,
    viewCountI,
    viewCountL,
    playDuration,
    playDurationA,
    playDurationI,
    playDurationL,
    payRate: payRate || '-',
    payRateA: payRateA || '-',
    payRateI: payRateI || '-',
    payRateL: payRateL || '-',
    payUser: payUser || '-',
    payUserA: payUserA || '-',
    payUserI: payUserI || '-',
    payUserL: payUserL || '-',
    redeemCount: redeemCount || '-',
    redeemCountA: redeemCountA || '-',
    redeemCountI: redeemCountI || '-',
    redeemCountL: redeemCountL || '-',
    shareCount: shareCount || '-',
    shareCountA: shareCountA || '-',
    shareCountI: shareCountI || '-',
    shareCountL: shareCountL || '-',
    sharePersonCount: sharePersonCount || '-',
    sharePersonCountA: sharePersonCountA || '-',
    sharePersonCountI: sharePersonCountI || '-',
    sharePersonCountL: sharePersonCountL || '-'
  };
}

export default {
  formatterDataShow
};
