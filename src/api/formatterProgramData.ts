import {
  dateToString,
  formatterChargeable,
  formatterAverage
} from '../ployfill/';
import {
  TableProgram
} from '../ployfill/field-types';

function formatterDataShow(list: Array<any>) {
  return list.map(item => {
    return formatterDayData(item);
  });
}

function formatterDayData(item: TableProgram) {
  const {
    averageDuration = 0,
    averageDurationA = 0,
    averageDurationI = 0,
    averageDurationL = 0,
    averagePlayCount = 0,
    averagePlayCountA = 0,
    averagePlayCountI = 0,
    averagePlayCountL = 0,
    averageViewCount = 0,
    averageViewCountA = 0,
    averageViewCountI = 0,
    averageViewCountL = 0,
    uv = 0,
    uvA = 0,
    uvI = 0,
    uvL = 0,
    collectCount = 0,
    collectCountA = 0,
    collectCountI = 0,
    collectCountL = 0,
    downloadCount = 0,
    downloadCountA = 0,
    downloadCountI = 0,
    downloadCountL = 0,
    homeJump = '-',
    homeJumpA = '-',
    homeJumpI = '-',
    homeJumpL = '-',
    isChargeable = '-',
    isChargeableA = '-',
    isChargeableI = '-',
    isChargeableL = '-',
    orderCount = '-',
    orderCountA = '-',
    orderCountI = '-',
    orderCountL = '-',
    packageJump = '-',
    packageJumpA = '-',
    packageJumpI = '-',
    packageJumpL = '-',
    payRate = '-',
    payRateA = '-',
    payRateI = '-',
    payRateL = '-',
    payUserCount = '-',
    payUserCountA = '-',
    payUserCountI = '-',
    payUserCountL = '-',
    playCount = 0,
    playCountA = 0,
    playCountI = 0,
    playCountL = 0,
    playDuration = 0,
    playDurationA = 0,
    playDurationI = 0,
    playDurationL = 0,
    // playUv = 0,
    redeemCount = '-',
    redeemCountA = '-',
    redeemCountI = '-',
    redeemCountL = '-',
    shareCount = '-',
    shareCountA = '-',
    shareCountI = '-',
    shareCountL = '-',
    sharePersonCount = '-',
    sharePersonCountA = '-',
    sharePersonCountI = '-',
    sharePersonCountL = '-',
    tags = '-',
    topicJump = '-',
    topicJumpA = '-',
    topicJumpI = '-',
    topicJumpL = '-',
    viewCount = 0,
    viewCountA = 0,
    viewCountI = 0,
    viewCountL = 0,
    // browseViewCount = 0,
    code = 0,
    name = 0,
    videoType = '-',
    timeStart,
    timeEnd
  } = item;
  const timeStartStr = dateToString(timeStart);
  const timeEndStr = dateToString(timeEnd);
  let dataPeriod = `${timeStartStr}~${timeEndStr}`;
  if (timeStartStr === timeEndStr) {
    dataPeriod = timeEndStr;
  }

  return {
    code,
    name,
    videoType,
    tags: tags ? tags.split('-') : '-',
    averageDuration: formatterAverage(averageDuration),
    averageDurationA: formatterAverage(averageDurationA),
    averageDurationI: formatterAverage(averageDurationI),
    averageDurationL: formatterAverage(averageDurationL),
    averagePlayCount: formatterAverage(averagePlayCount),
    averagePlayCountA: formatterAverage(averagePlayCountA),
    averagePlayCountI: formatterAverage(averagePlayCountI),
    averagePlayCountL: formatterAverage(averagePlayCountL),
    averageViewCount: formatterAverage(averageViewCount),
    averageViewCountA: formatterAverage(averageViewCountA),
    averageViewCountI: formatterAverage(averageViewCountI),
    averageViewCountL: formatterAverage(averageViewCountL),
    uv,
    uvA,
    uvI,
    uvL,
    playCount,
    playCountA,
    playCountI,
    playCountL,
    viewCount,
    viewCountA,
    viewCountI,
    viewCountL,
    collectCount,
    collectCountI,
    collectCountA,
    collectCountL,
    downloadCount,
    downloadCountA,
    downloadCountI,
    downloadCountL,
    homeJump: homeJump || '-',
    homeJumpA: homeJumpA || '-',
    homeJumpI: homeJumpI || '-',
    homeJumpL: homeJumpL || '-',
    isChargeable: formatterChargeable(isChargeable),
    isChargeableA: formatterChargeable(isChargeableA),
    isChargeableI: formatterChargeable(isChargeableI),
    isChargeableL: formatterChargeable(isChargeableL),
    orderCount: orderCount || '-',
    orderCountA: orderCountA || '-',
    orderCountI: orderCountI || '-',
    orderCountL: orderCountL || '-',
    packageJump: packageJump || '-',
    packageJumpA: packageJumpA || '-',
    packageJumpI: packageJumpI || '-',
    packageJumpL: packageJumpL || '-',
    payRate: payRate || '-',
    payRateA: payRateA || '-',
    payRateI: payRateI || '-',
    payRateL: payRateL || '-',
    payUserCount: payUserCount || '-',
    payUserCountA: payUserCountA || '-',
    payUserCountI: payUserCountI || '-',
    payUserCountL: payUserCountL || '-',
    playDuration,
    playDurationA,
    playDurationI,
    playDurationL,
    // playUv,
    redeemCount: redeemCount || '-',
    redeemCountA: redeemCountA || '-',
    redeemCountI: redeemCountI || '-',
    redeemCountL: redeemCountL || '-',
    shareCount: shareCount || '-',
    shareCountA: shareCountA || '-',
    shareCountI: shareCountI || '-',
    shareCountL: shareCountL || '-',
    sharePersonCount: sharePersonCount || '-',
    sharePersonCountA: sharePersonCountA || '-',
    sharePersonCountI: sharePersonCountI || '-',
    sharePersonCountL: sharePersonCountL || '-',
    topicJump: topicJump || '-',
    topicJumpA: topicJumpA || '-',
    topicJumpI: topicJumpI || '-',
    topicJumpL: topicJumpL || '-',
    // browseViewCount,
    dataPeriod,
    timeStart,
    timeEnd
  };
}

export default {
  formatterDataShow
};
